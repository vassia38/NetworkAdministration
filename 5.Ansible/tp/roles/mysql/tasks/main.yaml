---
- name: Install MySQL server
  apk:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - mysql
    - mysql-client
- name: Install MySQL python lib
  apk:
    name: py3-mysqlclient
    state: present
      #- name: Setup underlying mariadb
      #command: /etc/init.d/mariadb setup
      #notify: restart mariadb

- name: Ensure MariaDB service is stopped before init
  service:
    name: mariadb
    state: stopped

- name: Init MariaDB if necessary
  command: /etc/init.d/mariadb setup
  when: ansible_facts['os_family'] == 'Alpine'
  args:
    creates: "/var/lib/mysql/mysql"

- name: Ensure mySql service is running
  service:
    name: mariadb
    state: started
    enabled: yes

- name: Ensure root password is set
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ mysql_root_password }}"
    priv: "*.*:ALL,GRANT"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create application user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    priv: "{{ mysql_database }}.*:ALL"
    host: "%"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Remove anonymous users
  community.mysql.mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Disallow root login remotely
  community.mysql.mysql_user:
    name: root
    host: '%'
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Remove test database
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create application database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  
